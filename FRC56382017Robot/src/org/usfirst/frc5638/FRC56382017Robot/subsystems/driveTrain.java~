// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5638.FRC56382017Robot.subsystems;

import org.usfirst.frc5638.FRC56382017Robot.Robot;
import org.usfirst.frc5638.FRC56382017Robot.RobotMap;
import org.usfirst.frc5638.FRC56382017Robot.commands.*;
import edu.wpi.first.wpilibj.buttons.JoystickButton;
import com.kauailabs.navx.frc.AHRS;

import edu.wpi.first.wpilibj.DriverStation;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.SPI;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;


/**
 *
 */
public class driveTrain extends Subsystem {
	AHRS ahrs;
	
	
	

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController frontRight = RobotMap.driveTrainfrontRight;
    private final SpeedController frontLeft = RobotMap.driveTrainfrontLeft;
    private final SpeedController rearRight = RobotMap.driveTrainrearRight;
    private final SpeedController rearLeft = RobotMap.driveTrainrearLeft;
    private final RobotDrive driveMotors = RobotMap.driveTraindriveMotors;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new driveWithJoystick());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        try{
    	ahrs = new AHRS(SPI.Port.kMXP);
    }catch(RuntimeException ex){
    	DriverStation.reportError("Error instantiating navX MXP: " + ex.getMessage(), true);
    }
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    
    
    
    //public void drive(Joystick getJoystick){
	//	driveMotors.mecanumDrive_Cartesian(Robot.oi.joystick.getX(), Robot.oi.joystick.getRawAxis(3), Robot.oi.joystick.getY(), ahrs.getYaw());
    
    
    
    public void drive(XboxController getXbox1){
		driveMotors.mecanumDrive_Cartesian(getXbox1.getRawAxis(0), getXbox1.getRawAxis(1), getXbox1.getRawAxis(4), ahrs.getYaw());
		
		
		
		
		
		
		
		
    //CAN BE REMOVED-----------------------------------------------------------------------------------------------------------------------------------------------------------------
	//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	//-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    if(Robot.oi.joystick.getRawButton(2) == true){
    	ahrs.zeroYaw();
    }
    SmartDashboard.putNumber("Gyro Yaw", ahrs.getYaw());
    
    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
    //CAN BE REMOVED-----------------------------------------------------------------------------------------------------------------------------------------------------------------
    }
    public void stop(){
    	frontLeft.set(0);
    	frontRight.set(0);
    	rearRight.set(0);
    	rearLeft.set(0);
    }
    public void driveForward(){
    	frontLeft.set(.25);
    	frontRight.set(.25);
    	rearRight.set(.25);
    	rearLeft.set(.25);
    }
    public void driveBackward(){
    	frontLeft.set(-.25);
    	frontRight.set(-.25);
    	rearRight.set(-.25);
    	rearLeft.set(-.25);
    }
    public void turnLeft(){
    	frontLeft.set(-.3);
    	frontRight.set(.3);
    	rearRight.set(.3);
    	rearLeft.set(-.3);
    }
    public void turnRight(){
    	frontLeft.set(.3);
    	frontRight.set(-.3);
    	rearRight.set(-.3);
    	rearLeft.set(.3);
    }
    public void strafeLeft(){
    	frontLeft.set(.25);
    	frontRight.set(-.25);
    	rearRight.set(.25);
    	rearLeft.set(-.25);
    }
    public void strafeRight(){
    	frontLeft.set(-.75);
    	frontRight.set(.75);
    	rearRight.set(-.75);
    	rearLeft.set(.75);
    }
}
