// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc5638.FRC56382017Robot;

import org.usfirst.frc5638.FRC56382017Robot.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.XboxController;
import edu.wpi.first.wpilibj.buttons.*;
import edu.wpi.first.wpilibj.command.Command;
import com.kauailabs.navx.frc.AHRS;

import org.usfirst.frc5638.FRC56382017Robot.subsystems.*;

import com.kauailabs.navx.frc.AHRS;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {
    //// CREATING BUTTONS
    // One type of button is a joystick button which is any button on a joystick.
    // You create one by telling it which joystick it's on and which button
    // number it is.
    // Joystick stick = new Joystick(port);
    // Button button = new JoystickButton(stick, buttonNumber);

    // There are a few additional built in buttons you can use. Additionally,
    // by subclassing Button you can create custom triggers and bind those to
    // commands the same as any other Button.

    //// TRIGGERING COMMANDS WITH BUTTONS
    // Once you have a button, it's trivial to bind it to a button in one of
    // three ways:

    // Start the command when the button is pressed and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenPressed(new ExampleCommand());

    // Run the command while the button is being held down and interrupt it once
    // the button is released.
    // button.whileHeld(new ExampleCommand());

    // Start the command when the button is released  and let it run the command
    // until it is finished as determined by it's isFinished method.
    // button.whenReleased(new ExampleCommand());


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public JoystickButton winchUp;
    public JoystickButton winchDown;
    public JoystickButton servoButtonUp;
    public JoystickButton servoButtonDown;
    public JoystickButton placeGearButton;
    public Joystick joystick;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
    	xbox1 = new XboxController(0);
        xbox2 = new XboxController(1);
        
    	if(xbox1.getRawAxis(1) < 0.2 || xbox1.getRawAxis(1) > -0.2){
        	RobotMap.driveTrainfrontLeft.set(0);
        	RobotMap.driveTrainrearLeft.set(0);
        	RobotMap.driveTrainfrontRight.set(0);
        	RobotMap.driveTrainrearRight.set(0);
        }
        if(xbox1.getRawAxis(4) < 0.2 || xbox1.getRawAxis(4) > -0.2){
        	RobotMap.driveTrainfrontLeft.set(0);
        	RobotMap.driveTrainrearLeft.set(0);
        	RobotMap.driveTrainfrontRight.set(0);
        	RobotMap.driveTrainrearRight.set(0);
        }
        if(xbox1.getRawAxis(0) < 0.2 || xbox1.getRawAxis(0) > -0.2){
        	RobotMap.driveTrainfrontLeft.set(0);
        	RobotMap.driveTrainrearLeft.set(0);
        	RobotMap.driveTrainfrontRight.set(0);
        	RobotMap.driveTrainrearRight.set(0);
        }
        
        placeGearButton = new JoystickButton(xbox1, 10); //wont work... will send warning to ds
        placeGearButton.whenPressed(new placeGear());
        servoButtonDown = new JoystickButton(xbox1, 1);
        servoButtonDown.whenPressed(new servoComDown());
        servoButtonUp = new JoystickButton(xbox1, 3);
        servoButtonUp.whenPressed(new servoComUp());
        winchDown = new JoystickButton(xbox1, 10);
        winchDown.whileHeld(new winchDownCom());
        winchUp = new JoystickButton(xbox1, 6);
        winchUp.whileHeld(new winchUpCom());
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick = new Joystick(0);
        
        placeGearButton = new JoystickButton(joystick, 1);
        placeGearButton.whenPressed(new placeGear());
        servoButtonDown = new JoystickButton(joystick, 5);
        servoButtonDown.whenPressed(new servoComDown());
        servoButtonUp = new JoystickButton(joystick, 3);
        servoButtonUp.whenPressed(new servoComUp());
        winchDown = new JoystickButton(joystick, 6);
        winchDown.whileHeld(new winchDownCom());
        winchUp = new JoystickButton(joystick, 4);
        winchUp.whileHeld(new winchUpCom());


        // SmartDashboard Buttons
        SmartDashboard.putData("Autonomous Command", new AutonomousCommand());
        SmartDashboard.putData("driveWithJoystick", new driveWithJoystick());
        SmartDashboard.putData("winchUpCom", new winchUpCom());
        SmartDashboard.putData("winchDownCom", new winchDownCom());
        SmartDashboard.putData("pushGearOutCom", new pushGearOutCom());
        SmartDashboard.putData("pushGearInCom", new pushGearInCom());
        SmartDashboard.putData("servoComUp", new servoComUp());
        SmartDashboard.putData("servoComDown", new servoComDown());
        SmartDashboard.putData("visionCom", new visionCom());
        SmartDashboard.putData("driveForwardStrafeRightTest", new driveForwardStrafeRightTest());
        SmartDashboard.putData("placeGear", new placeGear());
        SmartDashboard.putData("Auto^2", new Auto^2());
        SmartDashboard.putData("Command Group 1", new CommandGroup1());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        
        
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getjoystick() {
        return joystick;
    }


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public XboxController getXbox1() {
    	return xbox1;
    }
    public XboxController getXbox2(){
    	return xbox2;
    }
}

